library(stylo)
load("Goethe_corpus.RData")
load("Other_authors_corpus.RData")
dist.cosine.delta <- function(x){
# z-scoring the input matrix of frequencies
x = scale(x)
# computing cosine dissimilarity
y = as.dist( x %*% t(x) / (sqrt(rowSums(x^2) %*% t(rowSums(x^2)))) )
# then, turning it into cosine similarity
z = 1 - y
# getting the results
return(z)
}
cut_short <- function(other_authors){
short <- which(unlist(lapply(other_authors, function(x){length(x)}))<5000)
other_authors <- other_authors[-short]
return(other_authors)
}
reduce_name_length <- function(corpus, chars_lim = 20){
names_tmp <- names(corpus)
for(i in 1:length(names_tmp)){
if(nchar(names_tmp[i])>chars_lim)
names_tmp[i] <- paste(substr(names_tmp[i], 1, chars_lim), "...", sep = "")
}
names(corpus) <- names_tmp
return(corpus)
}
for(i in 1:length(Goethe_LateStyle_corpus$PG_de_fulltexts)){
tmp_string <- Goethe_LateStyle_corpus$PG_de_fulltexts[i]
##substitute old S
tmp_string <- gsub("ſ", "s", tmp_string)
##substitute umlauts and double S
tmp_string <- gsub("ä", "ae", tmp_string)
tmp_string <- gsub("ö", "oe", tmp_string)
tmp_string <- gsub("ü", "ue", tmp_string)
tmp_string <- gsub("ß", "ss", tmp_string)
##substitute line breaks
tmp_string <- gsub("([a-z])-\\s+([a-z])", "\\1\\2", tmp_string)
tmp_string <- gsub("([a-z])¬\\s+([a-z])", "\\1\\2", tmp_string)
##save new version
Goethe_LateStyle_corpus$PG_de_fulltexts[i] <- tmp_string
print(i)
}
Goethe_corpus <- list()
for(i in 1:length(Goethe_LateStyle_corpus$PG_de_fulltexts)){
Goethe_corpus[[i]] <- txt.to.words(Goethe_LateStyle_corpus$PG_de_fulltexts[i])
}
names_tmp <- paste("Goethe", Goethe_LateStyle_corpus$PG_de_texts, Goethe_LateStyle_corpus$first_pub, sep = "_")
names(Goethe_corpus) <- gsub(" ", "", names_tmp)
names(Goethe_corpus) <- gsub(",", "", names_tmp)
Goethe_short <- which(unlist(lapply(Goethe_corpus, function(x){length(x)}))<5000)
Goethe_LateStyle_corpus <- Goethe_LateStyle_corpus[-Goethe_short,]
Goethe_corpus <- Goethe_corpus[-Goethe_short]
Goethe_young <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub <= 1776)]
Goethe_mean <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub > 1776 & Goethe_LateStyle_corpus$first_pub < 1809)]
Goethe_old <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub >= 1809)]
young_sel <- 1:length(Goethe_young)
mean_sel <- (length(Goethe_young)+1):(length(Goethe_young)+length(Goethe_mean))
old_sel <- (length(Goethe_young)+length(Goethe_mean)+1):(length(Goethe_young)+length(Goethe_mean)+length(Goethe_old))
names(Goethe_young) <- paste("Young", Goethe_LateStyle_corpus$first_pub[young_sel], Goethe_LateStyle_corpus$PG_de_texts[young_sel], sep = "_")
names(Goethe_young) <- gsub(" ", "", names(Goethe_young))
names(Goethe_young) <- gsub(",", "", names(Goethe_young))
Goethe_young <- reduce_name_length(Goethe_young, 25)
names(Goethe_mean) <- paste("Middle", Goethe_LateStyle_corpus$first_pub[mean_sel], Goethe_LateStyle_corpus$PG_de_texts[mean_sel], sep = "_")
names(Goethe_mean) <- gsub(" ", "", names(Goethe_mean))
names(Goethe_mean) <- gsub(",", "", names(Goethe_mean))
Goethe_mean <- reduce_name_length(Goethe_mean, 25)
names(Goethe_old) <- paste("Old", Goethe_LateStyle_corpus$first_pub[old_sel], Goethe_LateStyle_corpus$PG_de_texts[old_sel], sep = "_")
names(Goethe_old) <- gsub(" ", "", names(Goethe_old))
names(Goethe_old) <- gsub(",", "", names(Goethe_old))
Goethe_old <- reduce_name_length(Goethe_old, 25)
for(i in 1:length(other_authors_corpus$text)){
tmp_string <- other_authors_corpus$text[i]
##substitute old S
tmp_string <- gsub("ſ", "s", tmp_string)
##substitute umlauts and double S
tmp_string <- gsub("ä", "ae", tmp_string)
tmp_string <- gsub("ö", "oe", tmp_string)
tmp_string <- gsub("ü", "ue", tmp_string)
tmp_string <- gsub("ß", "ss", tmp_string)
##substitute line breaks
tmp_string <- gsub("([a-z])-\\s+([a-z])", "\\1\\2", tmp_string)
tmp_string <- gsub("([a-z])¬\\s+([a-z])", "\\1\\2", tmp_string)
##save new version
other_authors_corpus$text[i] <- tmp_string
print(i)
}
other_authors <- list()
for(i in 1:length(other_authors_corpus$author)){
other_authors[[i]] <- txt.to.words(other_authors_corpus$text[i])
}
names_tmp <- paste(other_authors_corpus$author, other_authors_corpus$title, other_authors_corpus$date, sep = "_")
names_tmp <- gsub(" ", "", names_tmp)
names(other_authors) <- gsub(",", "", names_tmp)
other_authors_young <- other_authors[which(other_authors_corpus$date <= 1776)]
other_authors_mean <- other_authors[which(other_authors_corpus$date > 1776 & other_authors_corpus$date < 1809)]
other_authors_old <- other_authors[which(other_authors_corpus$date >= 1809)]
other_authors_young <- cut_short(other_authors_young)
other_authors_mean <- cut_short(other_authors_mean)
other_authors_old <- cut_short(other_authors_old)
names(other_authors_young) <- paste("OthersY_", names(other_authors_young), sep = "")
names(other_authors_mean) <- paste("OthersM_", names(other_authors_mean), sep = "")
names(other_authors_old) <- paste("OthersO_", names(other_authors_old), sep = "")
Stylo_corpus <- c(Goethe_young, Goethe_mean, Goethe_old)
results.stylo <- stylo(gui = FALSE, corpus.lang="German", analysis.type="CA", mfw.min=2000, mfw.max=2000, mfw.incr=0, distance.measure="dist.cosine.delta", write.pdf.file = FALSE, parsed.corpus = Stylo_corpus)
Stylo_corpus <- c(Goethe_young, other_authors_young)
results.stylo <- stylo(gui = FALSE, corpus.lang="German", analysis.type="CA", mfw.min=2000, mfw.max=2000, mfw.incr=0, distance.measure="dist.cosine.delta", write.pdf.file = FALSE, parsed.corpus = Stylo_corpus)
library(stylo)
library(tidyverse)
library(reshape2)
library(SnowballC)
load("Goethe_corpus.RData")
for(i in 1:length(Goethe_LateStyle_corpus$PG_de_fulltexts)){
Kolimo_string <- Goethe_LateStyle_corpus$PG_de_fulltexts[i]
##substitute old S
Kolimo_string <- gsub("ſ", "s", Kolimo_string)
##substitute umlauts and double S
# Kolimo_string <- gsub("ä", "ae", Kolimo_string)
# Kolimo_string <- gsub("ö", "oe", Kolimo_string)
# Kolimo_string <- gsub("ü", "ue", Kolimo_string)
# Kolimo_string <- gsub("ß", "ss", Kolimo_string)
##substitute line breaks
Kolimo_string <- gsub("([a-z])-\\s+([a-z])", "\\1\\2", Kolimo_string)
Kolimo_string <- gsub("([a-z])¬\\s+([a-z])", "\\1\\2", Kolimo_string)
##save new version
Goethe_LateStyle_corpus$PG_de_fulltexts[i] <- Kolimo_string
print(i)
}
Goethe_corpus <- list()
for(i in 1:length(Goethe_LateStyle_corpus$PG_de_fulltexts)){
Goethe_corpus[[i]] <- txt.to.words(Goethe_LateStyle_corpus$PG_de_fulltexts[i])
}
names_tmp <- paste("Goethe", Goethe_LateStyle_corpus$PG_de_texts, Goethe_LateStyle_corpus$first_pub, sep = "_")
names(Goethe_corpus) <- gsub(" ", "", names_tmp)
names(Goethe_corpus) <- gsub(",", "", names_tmp)
Goethe_young <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub <= 1776)]
Goethe_mean <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub > 1776 & Goethe_LateStyle_corpus$first_pub < 1809)]
Goethe_old <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub >= 1809)]
semantic_areas <- list(
light = c("sonne", "licht", "glanz", "hell", "gold"),
totality = c("all", "totalität", "ganz", "kosmos"),
cloud = c("wolke", "nebel"),
eye = c("auge", "blick", "sehen", "sicht")
)
semantic_areas_stems <- lapply(semantic_areas, function(x) wordStem(x))
check_occurences_stem_partial <- function(corpus_list){
###prepare output frequency list
semantic_areas_freq <- rep(list(0),length(semantic_areas))
###transform corpus into vector of words
test <- unlist(corpus_list)
###calculate total number of words (for normalization)
total_words <- length(test)
###main iteration on semantic areas: for each one, check how many words are present in the corpus
for(i in 1:length(semantic_areas_stems)){
for(n in 1:length(semantic_areas_stems[[i]])){
semantic_areas_freq[[i]][n] <- length(grep(semantic_areas_stems[[i]][n], test))
}
print(i)
}
###transform discrete frequencies (for each word) into a single number (for all words)
semantic_areas_freq <- unlist(lapply(semantic_areas_freq, function(x){sum(x)}))
###normalization
semantic_areas_freq <- semantic_areas_freq/total_words
return(semantic_areas_freq)
}
semantic_areas_freq_young <- check_occurences_stem_partial(Goethe_young)
semantic_areas_freq_mean <- check_occurences_stem_partial(Goethe_mean)
semantic_areas_freq_old <- check_occurences_stem_partial(Goethe_old)
semantic_areas_full <- data.frame(semantic_areas = names(semantic_areas), Young = semantic_areas_freq_young, Middle = semantic_areas_freq_mean, Old = semantic_areas_freq_old)
semantic_areas_full_melt <- melt(semantic_areas_full, variable.name = "semantic_areas")
colnames(semantic_areas_full_melt) <- c("semantic_areas", "period", "value")
p3 <- ggplot(semantic_areas_full_melt) +
geom_bar(aes(semantic_areas, value, fill = period), stat = "identity", position = "dodge")
p3
library(stylo)
load("Goethe_corpus.RData")
load("Other_authors_corpus.RData")
for(i in 1:length(Goethe_LateStyle_corpus$PG_de_fulltexts)){
Kolimo_string <- Goethe_LateStyle_corpus$PG_de_fulltexts[i]
##substitute old S
Kolimo_string <- gsub("ſ", "s", Kolimo_string)
##substitute umlauts and double S
# Kolimo_string <- gsub("ä", "ae", Kolimo_string)
# Kolimo_string <- gsub("ö", "oe", Kolimo_string)
# Kolimo_string <- gsub("ü", "ue", Kolimo_string)
# Kolimo_string <- gsub("ß", "ss", Kolimo_string)
##substitute line breaks
Kolimo_string <- gsub("([a-z])-\\s+([a-z])", "\\1\\2", Kolimo_string)
Kolimo_string <- gsub("([a-z])¬\\s+([a-z])", "\\1\\2", Kolimo_string)
##save new version
Goethe_LateStyle_corpus$PG_de_fulltexts[i] <- Kolimo_string
print(i)
}
Goethe_young <- Goethe_LateStyle_corpus$PG_de_fulltexts[which(Goethe_LateStyle_corpus$first_pub <= 1776)]
Goethe_mean <- Goethe_LateStyle_corpus$PG_de_fulltexts[which(Goethe_LateStyle_corpus$first_pub > 1776 & Goethe_LateStyle_corpus$first_pub < 1809)]
Goethe_old <- Goethe_LateStyle_corpus$PG_de_fulltexts[which(Goethe_LateStyle_corpus$first_pub >= 1809)]
for(i in 1:length(other_authors_corpus$text)){
tmp_string <- other_authors_corpus$text[i]
##substitute old S
tmp_string <- gsub("ſ", "s", tmp_string)
##substitute umlauts and double S
# tmp_string <- gsub("ä", "ae", tmp_string)
# tmp_string <- gsub("ö", "oe", tmp_string)
# tmp_string <- gsub("ü", "ue", tmp_string)
# tmp_string <- gsub("ß", "ss", tmp_string)
##substitute line breaks
tmp_string <- gsub("([a-z])-\\s+([a-z])", "\\1\\2", tmp_string)
tmp_string <- gsub("([a-z])¬\\s+([a-z])", "\\1\\2", tmp_string)
##save new version
other_authors_corpus$text[i] <- tmp_string
print(i)
}
other_authors_young <- other_authors_corpus$text[which(other_authors_corpus$date <= 1776)]
other_authors_mean <- other_authors_corpus$text[which(other_authors_corpus$date > 1776 & other_authors_corpus$date < 1809)]
other_authors_old <- other_authors_corpus$text[which(other_authors_corpus$date >= 1809)]
dist.cosine.delta <- function(x){
# z-scoring the input matrix of frequencies
x = scale(x)
# computing cosine dissimilarity
y = as.dist( x %*% t(x) / (sqrt(rowSums(x^2) %*% t(rowSums(x^2)))) )
# then, turning it into cosine similarity
z = 1 - y
# getting the results
return(z)
}
cut_short <- function(other_authors){
short <- which(unlist(lapply(other_authors, function(x){length(x)}))<5000)
other_authors <- other_authors[-short]
return(other_authors)
}
reduce_name_length <- function(corpus, chars_lim = 20){
names_tmp <- names(corpus)
for(i in 1:length(names_tmp)){
if(nchar(names_tmp[i])>chars_lim)
names_tmp[i] <- paste(substr(names_tmp[i], 1, chars_lim), "...", sep = "")
}
names(corpus) <- names_tmp
return(corpus)
}
##########
#####Goethe corpus preparation
##########
###Uniform spelling (to avoid issues with alternative spellings)
for(i in 1:length(Goethe_LateStyle_corpus$PG_de_fulltexts)){
tmp_string <- Goethe_LateStyle_corpus$PG_de_fulltexts[i]
##substitute old S
tmp_string <- gsub("ſ", "s", tmp_string)
##substitute umlauts and double S
tmp_string <- gsub("ä", "ae", tmp_string)
tmp_string <- gsub("ö", "oe", tmp_string)
tmp_string <- gsub("ü", "ue", tmp_string)
tmp_string <- gsub("ß", "ss", tmp_string)
##substitute line breaks
tmp_string <- gsub("([a-z])-\\s+([a-z])", "\\1\\2", tmp_string)
tmp_string <- gsub("([a-z])¬\\s+([a-z])", "\\1\\2", tmp_string)
##save new version
Goethe_LateStyle_corpus$PG_de_fulltexts[i] <- tmp_string
print(i)
}
###prepare Goethe sub-corpus
Goethe_corpus <- list()
for(i in 1:length(Goethe_LateStyle_corpus$PG_de_fulltexts)){
Goethe_corpus[[i]] <- txt.to.words(Goethe_LateStyle_corpus$PG_de_fulltexts[i])
}
names_tmp <- paste("Goethe", Goethe_LateStyle_corpus$PG_de_texts, Goethe_LateStyle_corpus$first_pub, sep = "_")
names(Goethe_corpus) <- gsub(" ", "", names_tmp)
names(Goethe_corpus) <- gsub(",", "", names_tmp)
###get rid of short texts (limit 5,000 words)
Goethe_short <- which(unlist(lapply(Goethe_corpus, function(x){length(x)}))<5000)
Goethe_LateStyle_corpus <- Goethe_LateStyle_corpus[-Goethe_short,]
Goethe_corpus <- Goethe_corpus[-Goethe_short]
###subdivide in young, mean and old
Goethe_young <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub <= 1776)]
Goethe_mean <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub > 1776 & Goethe_LateStyle_corpus$first_pub < 1809)]
Goethe_old <- Goethe_corpus[which(Goethe_LateStyle_corpus$first_pub >= 1809)]
###anonymize Goethe's texts, for internal comparison
young_sel <- 1:length(Goethe_young)
mean_sel <- (length(Goethe_young)+1):(length(Goethe_young)+length(Goethe_mean))
old_sel <- (length(Goethe_young)+length(Goethe_mean)+1):(length(Goethe_young)+length(Goethe_mean)+length(Goethe_old))
names(Goethe_young) <- paste("Young", Goethe_LateStyle_corpus$first_pub[young_sel], Goethe_LateStyle_corpus$PG_de_texts[young_sel], sep = "_")
names(Goethe_young) <- gsub(" ", "", names(Goethe_young))
names(Goethe_young) <- gsub(",", "", names(Goethe_young))
Goethe_young <- reduce_name_length(Goethe_young, 25)
names(Goethe_mean) <- paste("Middle", Goethe_LateStyle_corpus$first_pub[mean_sel], Goethe_LateStyle_corpus$PG_de_texts[mean_sel], sep = "_")
names(Goethe_mean) <- gsub(" ", "", names(Goethe_mean))
names(Goethe_mean) <- gsub(",", "", names(Goethe_mean))
Goethe_mean <- reduce_name_length(Goethe_mean, 25)
names(Goethe_old) <- paste("Old", Goethe_LateStyle_corpus$first_pub[old_sel], Goethe_LateStyle_corpus$PG_de_texts[old_sel], sep = "_")
names(Goethe_old) <- gsub(" ", "", names(Goethe_old))
names(Goethe_old) <- gsub(",", "", names(Goethe_old))
Goethe_old <- reduce_name_length(Goethe_old, 25)
##########
#####Other authors corpus preparation
##########
###Uniform spelling (to avoid issues with alternative spellings)
for(i in 1:length(other_authors_corpus$text)){
tmp_string <- other_authors_corpus$text[i]
##substitute old S
tmp_string <- gsub("ſ", "s", tmp_string)
##substitute umlauts and double S
tmp_string <- gsub("ä", "ae", tmp_string)
tmp_string <- gsub("ö", "oe", tmp_string)
tmp_string <- gsub("ü", "ue", tmp_string)
tmp_string <- gsub("ß", "ss", tmp_string)
##substitute line breaks
tmp_string <- gsub("([a-z])-\\s+([a-z])", "\\1\\2", tmp_string)
tmp_string <- gsub("([a-z])¬\\s+([a-z])", "\\1\\2", tmp_string)
##save new version
other_authors_corpus$text[i] <- tmp_string
print(i)
}
###prepare sub-corpus
other_authors <- list()
for(i in 1:length(other_authors_corpus$author)){
other_authors[[i]] <- txt.to.words(other_authors_corpus$text[i])
}
names_tmp <- paste(other_authors_corpus$author, other_authors_corpus$title, other_authors_corpus$date, sep = "_")
names_tmp <- gsub(" ", "", names_tmp)
names(other_authors) <- gsub(",", "", names_tmp)
###subdivide in young, mean and old
other_authors_young <- other_authors[which(other_authors_corpus$date <= 1776)]
other_authors_mean <- other_authors[which(other_authors_corpus$date > 1776 & other_authors_corpus$date < 1809)]
other_authors_old <- other_authors[which(other_authors_corpus$date >= 1809)]
###get rid of short texts (limit 5,000 words)
other_authors_young <- cut_short(other_authors_young)
other_authors_mean <- cut_short(other_authors_mean)
other_authors_old <- cut_short(other_authors_old)
###anonymize all texts, in order to isolate Goethe on graphs
names(other_authors_young) <- paste("OthersY_", names(other_authors_young), sep = "")
names(other_authors_mean) <- paste("OthersM_", names(other_authors_mean), sep = "")
names(other_authors_old) <- paste("OthersO_", names(other_authors_old), sep = "")
Stylo_corpus <- c(Goethe_young, Goethe_mean, Goethe_old)
results.stylo <- stylo(gui = FALSE, corpus.lang="German", analysis.type="CA", mfw.min=2000, mfw.max=2000, mfw.incr=0, distance.measure="dist.cosine.delta", write.pdf.file = FALSE, parsed.corpus = Stylo_corpus)
file.rename("Goethe_CA_2000_MFWs_Culled_0__dist.cosine.delta_EDGES.csv", "Goethe_internal_Gephi.csv")
Stylo_corpus <- c(Goethe_young, other_authors_young)
results.stylo <- stylo(gui = FALSE, corpus.lang="German", analysis.type="CA", mfw.min=2000, mfw.max=2000, mfw.incr=0, distance.measure="dist.cosine.delta", write.pdf.file = FALSE, parsed.corpus = Stylo_corpus)
file.rename("*_EDGES.csv", "Goethe_external_young_Gephi.csv")
file.rename("Goethe_CA_2000_MFWs_Culled_0__dist.cosine.delta_EDGES.csv", "Goethe_external_young_Gephi.csv")
