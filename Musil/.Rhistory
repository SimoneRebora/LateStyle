library(stylo)
setwd("./Musil_corpus")
filenames <- list.files(path = ".", pattern="*.txt", full.names=TRUE, recursive = TRUE)
dist.cosine.delta = function(x){
# z-scoring the input matrix of frequencies
x = scale(x)
# computing cosine dissimilarity
y = as.dist( x %*% t(x) / (sqrt(rowSums(x^2) %*% t(rowSums(x^2)))) )
# then, turning it into cosine similarity
z = 1 - y
# getting the results
return(z)
}
cut_short <- function(other_authors){
short <- which(unlist(lapply(other_authors, function(x){length(x)}))<5000)
if(length(short)>0)
other_authors <- other_authors[-short]
return(other_authors)
}
Musil_young <- list()
Musil_middle <- list()
Musil_old <- list()
for(i in filenames){
tmp_string <- readLines(i)
###Normalize text for confrontation with Kolimo (where these normalization was already applied...)
##substitute old S
tmp_string <- gsub("ſ", "s", tmp_string)
##substitute umlauts and double S
tmp_string <- gsub("ä", "ae", tmp_string)
tmp_string <- gsub("ö", "oe", tmp_string)
tmp_string <- gsub("ü", "ue", tmp_string)
tmp_string <- gsub("ß", "ss", tmp_string)
tmp_selection <- list(txt.to.words(tmp_string))
names_tmp <- paste(unlist(strsplit(i, "/"))[2], "_", unlist(strsplit(i, "/"))[3], sep = "")
names(tmp_selection) <- unlist(strsplit(names_tmp, ".txt"))[1]
if(unlist(strsplit(i, "/"))[2] == "Old")
Musil_old <- c(Musil_old, tmp_selection)
if(unlist(strsplit(i, "/"))[2] == "Middle")
Musil_middle <- c(Musil_middle, tmp_selection)
if(unlist(strsplit(i, "/"))[2] == "Young")
Musil_young <- c(Musil_young, tmp_selection)
}
Musil_young <- cut_short(Musil_young)
Musil_middle <- cut_short(Musil_middle)
Musil_old <- cut_short(Musil_old)
setwd("..")
load("Other_authors_corpus.RData")
for(i in 1:length(other_authors_subcorp)){
tmp_string <- other_authors_subcorp[i]
##substitute old S
tmp_string <- gsub("ſ", "s", tmp_string)
##substitute umlauts and double S
tmp_string <- gsub("ä", "ae", tmp_string)
tmp_string <- gsub("ö", "oe", tmp_string)
tmp_string <- gsub("ü", "ue", tmp_string)
tmp_string <- gsub("ß", "ss", tmp_string)
##substitute line breaks
tmp_string <- gsub("([a-z])-\\s+([a-z])", "\\1\\2", tmp_string)
tmp_string <- gsub("([a-z])¬\\s+([a-z])", "\\1\\2", tmp_string)
##save new version
other_authors_subcorp[i] <- tmp_string
print(i)
}
range_young=c(1906, 1917)
range_mean=c(1918, 1927)
range_old=c(1928, 1942)
other_authors_metadata <- full_metadata_withDates[-which(full_metadata_withDates$gnd_id==Musil_gnd),]
range_dates <- range_young
works_in_range <- which(is.between(other_authors_metadata$date, range_dates))
dist.cosine.delta = function(x){
# z-scoring the input matrix of frequencies
x = scale(x)
# computing cosine dissimilarity
y = as.dist( x %*% t(x) / (sqrt(rowSums(x^2) %*% t(rowSums(x^2)))) )
# then, turning it into cosine similarity
z = 1 - y
# getting the results
return(z)
}
cut_short <- function(other_authors){
short <- which(unlist(lapply(other_authors, function(x){length(x)}))<5000)
if(length(short)>0)
other_authors <- other_authors[-short]
return(other_authors)
}
is.between <- function(x, range=c(a, b)) {
x > range[1] & x < range[2]
}
reduce_name_length <- function(corpus, chars_lim = 20){
names_tmp <- names(corpus)
for(i in 1:length(names_tmp)){
if(nchar(names_tmp[i])>chars_lim)
names_tmp[i] <- paste(substr(names_tmp[i], 1, chars_lim), "...", sep = "")
}
names(corpus) <- names_tmp
return(corpus)
}
range_dates <- range_young
works_in_range <- which(is.between(other_authors_metadata$date, range_dates))
other_authors_metadata <- other_authors_metadata[works_in_range,]
other_authors_subcorp <- other_authors_subcorp[works_in_range]
load("Other_authors_corpus.RData")
full_metadata_withDates <- other_authors_metadata
Kolimo_texts <- other_authors_subcorp
save(Kolimo_texts, full_metadata_withDates, file = "Other_authors_corpus.RData")
